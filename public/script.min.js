import e from "./cookieManager.js";
let cookieManager = new e();
cookieManager.init(),
  document.addEventListener("DOMContentLoaded", () => {
    let e = document.querySelector(".explorer-menu"),
      t = document.querySelector(".nav-menu"),
      s = t.querySelectorAll("a"),
      i = document.querySelector(".ide-container"),
      n = () => window.innerWidth < 768,
      a = () => {
        n() && (t.classList.remove("active"), e.classList.remove("active"));
      },
      r = (s) => {
        !n() || t.contains(s.target) || e.contains(s.target) || a();
      };
    e.addEventListener("click", (s) => {
      s.stopPropagation(),
        t.classList.toggle("active"),
        e.classList.toggle("active");
    }),
      s.forEach((e) => {
        e.addEventListener("click", a);
      }),
      document.addEventListener("click", r),
      i.addEventListener("scroll", a, { passive: !0 });
    let c = document.getElementById("current-year");
    (c.textContent = new Date().getFullYear()),
      document.addEventListener("touchstart", () => {}, { passive: !0 }),
      document.addEventListener("touchmove", () => {}, { passive: !0 }),
      document.addEventListener("wheel", () => {}, { passive: !0 });
    let o = document.getElementById("themeSwitch");
    if (o) {
      o.addEventListener("change", () => {
        console.log("Switch changed"),
          o.checked
            ? (document.body.classList.add("light-theme"),
              localStorage.setItem("theme", "light"))
            : (document.body.classList.remove("light-theme"),
              localStorage.setItem("theme", "dark"));
      });
      let l = localStorage.getItem("theme");
      console.log("Saved theme:", l),
        "dark" === l
          ? ((o.checked = !1), document.body.classList.remove("light-theme"))
          : ((o.checked = !0), document.body.classList.add("light-theme"));
    } else console.error("Theme switch element not found");
  }),
  document
    .querySelector(".projects-dropdown")
    .addEventListener("click", function () {
      requestAnimationFrame(() => {
        this.classList.toggle("active"),
          document
            .querySelector(".projects-submenu")
            .classList.toggle("active");
      });
    }),
  document
    .querySelector(".vs-code-icon")
    .addEventListener("click", function () {
      let e = document.getElementById("meowSound");
      (e.volume = 0.2), e.play();
    });
let observer = new IntersectionObserver(
  (e) => {
    e.forEach((e) => {
      let t = e.target;
      requestAnimationFrame(() => {
        let s = e.isIntersecting ? "animate-slide-in" : "reset-animation",
          i = e.isIntersecting ? "reset-animation" : "animate-slide-in";
        t.classList.remove(i), t.classList.add(s);
      });
    });
  },
  { threshold: 0.1 }
);
document.querySelectorAll(".animate-slide-in").forEach((e) => {
  observer.observe(e);
});
